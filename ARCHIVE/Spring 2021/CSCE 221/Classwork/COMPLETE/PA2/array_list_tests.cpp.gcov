        -:    0:Source:array_list_tests.cpp
        -:    0:Graph:array_list_tests.gcno
        -:    0:Data:array_list_tests.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <iostream>
        -:    2:#include "array_list.h"
        -:    3:
        -:    4:using std::cout, std::endl;
        -:    5:
        1:    6:int main() {
        2:    7:    ArrayList<int> A;
        2:    8:    ArrayList<int> C;
        -:    9:
        1:   10:    cout << "Initializing 3 lists..." << endl << endl;
        -:   11:
        1:   12:    A.print();
        1:   13:    C.print();
        -:   14:
        1:   15:    cout << "Testing insert..." << endl << endl;
        1:   16:    A.insert(0, 1);
        1:   17:    A.insert(0,2);
        1:   18:    A.insert(1, 3);
        1:   19:    A.insert(1, 4);
        1:   20:    A.insert(4, 5);
        1:   21:    A.print();
        -:   22:
        2:   23:    try { A.insert(10, 100); }
        1:   24:    catch(std::out_of_range e) { cout << "Test exception caught..." << endl << endl; }
        -:   25:
        1:   26:    cout << "Testing copy assingment..." << endl << endl;
        -:   27:
        1:   28:    C = A;
        -:   29:
        1:   30:    cout << "Contents of " << &A << " copied over to " << &C << endl << endl;
        -:   31:
        1:   32:    C.print();
        -:   33:
        1:   34:    cout << "Testing compy constructor..." << endl << endl;
        -:   35:
        2:   36:    ArrayList<int> B(C);
        1:   37:    B.print();
        -:   38:
        1:   39:    cout << "Removing elements..." << endl << endl;
        -:   40:
        1:   41:    B.remove(2);
        1:   42:    B.print();
        -:   43:
        1:   44:    B.remove(0);
        1:   45:    B.print();
        -:   46:
        1:   47:    B.remove(2);
        1:   48:    B.print();
        -:   49:
        1:   50:    B.remove(0);
        1:   51:    B.print();
        -:   52:
        1:   53:    B.remove(0);
        1:   54:    B.print();
        -:   55:
        -:   56:    try{
        1:   57:        B.remove(0);
    #####:   58:        B.print();
        -:   59:     } 
        1:   60:     catch(std::out_of_range e) { cout << "Test exception caught..." << endl << endl; }
        -:   61:
        1:   62:     cout << "Testing operator[]..." << endl << endl;
        -:   63:
        1:   64:     cout << A[0] << endl;
        1:   65:     try{ A[A.size()]; } 
        1:   66:     catch(std::out_of_range e) { cout << "Test exception caught..." << endl << endl; }
        -:   67:
        1:   68:     cout << "Large data case..." << endl;
        -:   69:
        -:   70:
    10001:   71:     for(size_t i = 0; i < 10000; ++i) {
    10000:   72:         B.insert(i % 10, i);
        -:   73:     }
        1:   74:     C = B;
        2:   75:     ArrayList<int> D(C);
        -:   76:
    10001:   77:     for(size_t i = 0; i < 10000; ++i) {
    10000:   78:         D.remove(0);
        -:   79:     }
        -:   80:
        1:   81:     D.print();
        -:   82:
        1:   83:     cout << "ArrayLists tests complete." << endl;
        4:   84:}
